name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-celery-main:
    name: Build Celery for Scrapy News
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.5-dind
        options: --privileged
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ secrets.REMOTE_DOCKER_USERNAME }}" --password-stdin

      - name: Docker Info
        run: docker info

      - name: Build Docker Image
        run: |
          docker build -f Dockerfile.celery.main --pull \
            --build-arg BACKEND_URL=${{ vars.PROD_BACKEND_URL }} \
            --build-arg NEWS_REDIS_URL=${{ vars.PROD_NEWS_REDIS_URL }} \
            --build-arg CRON_JOB_INTERVAL=${{ vars.PROD_NEWS_CRON_JOB_INTERVAL }} \
            -t ghcr.io/quickfoxconsulting/quicksamachar_repo_django/news-celery:latest .

      - name: Push Docker Image
        run: |
          docker push ghcr.io/quickfoxconsulting/quicksamachar_repo_django/news-celery:latest

      - name: Logout from Docker Registry
        run: docker logout ghcr.io

  deploy-celery-main:
    name: Deploy Celery for Scrapy News
    runs-on: ubuntu-latest
    needs: build-celery-main
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH Key
        run: |
          echo "${{ secrets.AWS_SSH_KEY }}" > /tmp/id_rsa
          chmod 600 /tmp/id_rsa
        shell: bash
      
      - name: Test SSH Connection
        run: |
          ssh -vvv -i /tmp/id_rsa -o StrictHostKeyChecking=no ${{ vars.PROD_HOST }} "echo 'SSH connection successful'"

      - name: Install Docker on Remote Server
        run: |
          ssh -i /tmp/id_rsa -o StrictHostKeyChecking=no ${{ vars.PROD_HOST }} "which docker || ( sudo apt update -y && sudo apt install -y apt-transport-https ca-certificates curl software-properties-common && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && sudo add-apt-repository 'deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable' -y && sudo apt update -y && sudo apt install -y docker-ce )"
      
      - name: Log in to Docker Registry on Remote Server
        run: |
          ssh -i /tmp/id_rsa -o StrictHostKeyChecking=no ${{ vars.PROD_HOST }} "echo '${{ secrets.GITHUB_TOKEN }}' | sudo docker login ghcr.io -u '${{ secrets.REMOTE_DOCKER_USERNAME }}' --password-stdin"

      - name: Pull Docker Image on Remote Server
        run: |
          ssh -i /tmp/id_rsa -o StrictHostKeyChecking=no ${{ vars.PROD_HOST }} "sudo docker pull ghcr.io/quickfoxconsulting/quicksamachar_repo_django/news-celery:latest"

      - name: Remove Existing Docker Container
        run: |
          ssh -i /tmp/id_rsa -o StrictHostKeyChecking=no ${{ vars.PROD_HOST }} "sudo docker container rm -f news-celery || true"

      - name: Run Docker Container
        run: |
          ssh -i /tmp/id_rsa -o StrictHostKeyChecking=no ${{ vars.PROD_HOST }} "sudo docker run --net=host -d --name=news-celery --restart unless-stopped ghcr.io/quickfoxconsulting/quicksamachar_repo_django/news-celery:latest"
